/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_network_free(a: number): void;
export function network_from_str(a: number, b: number, c: number): void;
export function network_to_string(a: number, b: number): void;
export function init(): void;
export function __wbg_extendeddescriptor_free(a: number): void;
export function extendeddescriptor_from_str(a: number, b: number, c: number): void;
export function extendeddescriptor_to_string(a: number, b: number): void;
export function extendeddescriptor_get_address(a: number, b: number, c: number, d: number): void;
export function __wbg_multisigwalletconfig_free(a: number): void;
export function multisigwalletconfig_from_str(a: number, b: number, c: number): void;
export function multisigwalletconfig_to_string(a: number, b: number): void;
export function multisigwalletconfig_to_string_pretty(a: number, b: number): void;
export function multisigwalletconfig_external_descriptor(a: number, b: number): void;
export function multisigwalletconfig_external_address(a: number, b: number, c: number): void;
export function multisigwalletconfig_internal_descriptor(a: number, b: number): void;
export function multisigwalletconfig_internal_address(a: number, b: number, c: number): void;
export function multisigwalletconfig_network(a: number): number;
export function __wbg_caravanconfig_free(a: number): void;
export function caravanconfig_from_str(a: number, b: number, c: number): void;
export function caravanconfig_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function caravanconfig_to_string(a: number, b: number): void;
export function caravanconfig_to_string_pretty(a: number, b: number): void;
export function caravanconfig_name(a: number, b: number): void;
export function caravanconfig_address_type(a: number, b: number): void;
export function caravanconfig_external_descriptor(a: number, b: number): void;
export function caravanconfig_external_address(a: number, b: number, c: number): void;
export function caravanconfig_internal_descriptor(a: number, b: number): void;
export function caravanconfig_internal_address(a: number, b: number, c: number): void;
export function caravanconfig_network(a: number): number;
export function rustsecp256k1_v0_6_1_context_create(a: number): number;
export function rustsecp256k1_v0_6_1_context_destroy(a: number): void;
export function rustsecp256k1_v0_6_1_default_illegal_callback_fn(a: number, b: number): void;
export function rustsecp256k1_v0_6_1_default_error_callback_fn(a: number, b: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_start(): void;
