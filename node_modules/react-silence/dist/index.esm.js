import{useEffect as n}from"react";function e(){return e=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i])}return n},e.apply(this,arguments)}var r=["error","log","warn","info"],i=r.reduce(function(n,r){var i;return e(((i={})[r]=console[r],i),n)},{}),o=function(n){var e=[],r=[];return n.forEach(function(n){"string"==typeof n?i[n]?e.push(n):i.error('Passed a string to silence which was not a log type. Ignoring: "'+n+'"'):r.push(n)}),{logTypes:e,matchers:r}},c=function(){var n=o([].slice.call(arguments)),e=n.logTypes,r=n.matchers;e.forEach(function(n){console[n]=function(){var e=[].slice.call(arguments);r.length&&(r.some(function(n){return n.test(e[0])})||i[n].apply(i,e))}})},t=function(){var n=[].slice.call(arguments);(n.length?n:r).forEach(function(n){console[n]=i[n]})},a=function(){var n=[].slice.call(arguments),e=o(n),r=e.logTypes;beforeAll(function(){c.apply(void 0,n)}),afterAll(function(){t.apply(void 0,r)})},l=function(n){var e=[].slice.call(arguments,1),r=o(e),i=r.logTypes;c.apply(void 0,e),n(),t.apply(void 0,i)},s=function(){var n=[].slice.call(arguments),e=o(n),r=e.logTypes;return{silence:function(){return c.apply(void 0,n)},unsilence:function(){return t.apply(void 0,r)},silenceDescribe:function(){return a.apply(void 0,n)},silenceWithin:function(e){return l.apply(void 0,[e].concat(n))}}},p={reactKeysError:/Each child in a list should have a unique "key" prop/,jestActError:/inside a test was not wrapped in act/,deprecationWarning:/is deprecated and will be removed in a future major release/},u=function(){var e=[].slice.call(arguments),r=o(e),i=r.logTypes;c.apply(void 0,e),n(function(){t.apply(void 0,i)})};export{p as matchers,c as silence,a as silenceDescribe,s as silenceFor,l as silenceWithin,t as unsilence,u as useSilence};
//# sourceMappingURL=index.esm.js.map
